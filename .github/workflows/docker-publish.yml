name: "Publish Docker Image"

# The workflow below runs when the release event triggers with the published release type.
# For more information on the release event.
# See: [Events that trigger workflows](https://docs.github.com/en/actions/reference/events-that-trigger-workflows#release)
# See: https://github.com/marketplace/actions/build-and-push-docker-images

on:
  release:
    types:
      - published

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write 

    steps:
      # See: https://github.com/marketplace/actions/checkout
      - name: "Checkout repository"
        id: checkout_repository
        uses: actions/checkout@v3

      # Install the cosign tool
      # See: https://github.com/sigstore/cosign-installer
      # See: https://github.com/marketplace/actions/cosign-installer
      - name: "Install cosign"
        id: install_cosign
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.11.0'

      # Use Docker buildx to be able to use caches
      # See: https://github.com/docker/build-push-action/blob/e27bcee4eb9e7b4bc168418e3364c4482120393a/docs/advanced/cache.md
      - name: "Set up Docker buildx"
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry
      # See: https://github.com/docker/login-action
      # See: https://github.com/marketplace/actions/docker-login
      - name: "Log into registry ${{ vars.REGISTRY }}"
        id: registry_login
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

     # Extract metadata (tags, labels) for Docker
      # See: https://github.com/docker/metadata-action
      # See: https://github.com/marketplace/actions/docker-metadata-action
      - name: "Extract Docker metadata"
        id: docker_metadata
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}
          # set latest tag for default branch
          # SemVer tags, see: https://github.com/marketplace/actions/docker-metadata-action#user-content-semver
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

          # type=raw,value=latest,enable={{is_default_branch}}

      # Build and push Docker image with Buildx
      # See: https://github.com/docker/build-push-action
      # See: https://github.com/marketplace/actions/build-and-push-docker-images
      - name: "Build and push Docker image"
        id: build_and_push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: true
          tags: ${{ steps.docker_metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # Sign the resulting Docker image digest.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.
      # If you would like to publish transparency data even for private images,
      # pass --force to cosign below.
      # See: https://github.com/sigstore/cosign
      - name: "Sign the published Docker image"
        id: sign_image
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --key env://COSIGN_PRIVATE_KEY {}@${{ steps.build_and_push.outputs.digest }}
